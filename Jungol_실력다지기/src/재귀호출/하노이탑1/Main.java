package 재귀호출.하노이탑1;

import java.util.Scanner;

/*
http://jungol.co.kr/bbs/board.php?bo_table=pbank&wr_id=441&sca=2070
1161 : 하노이의 탑

하노이의 탑에 대한 전설은 아래와 같다.
인도 베나레스에 있는 한 사원에는 세상의 중심을 나타내는 큰 돔이 있고 그 안에 세 개의 다이아몬드 기둥이 동판 위에 세워져 있다. 기둥 가운데 하나에는 신이 64개의 순금 원판을 끼워 놓았다. 가장 큰 원판이 바닥에 놓여 있고, 나머지 원판들이 점점 작아지며 꼭대기까지 쌓여 있다. 이것은 신성한 브라흐마의 탑이다. 브라흐마의 지시에 따라 승려들은 모든 원판을 다른 기둥으로 옮기기 위해 밤낮 없이 차례로 제단에 올라 규칙에 따라 원판을 하나씩 옮긴다. 이 일이 끝날 때, 탑은 무너지고 세상은 종말을 맞이하게 된다.

기둥을 1, 2, 3 번으로 하고, N개의 원판이 작은 것부터 1, 2, 3, 4 … N이라고 할 때, 아래의 규칙에 따라 모든 원판을 3번 기둥으로 쌓기 위해 이동한다.
1. 한 번에 하나의 원판만 옮길 수 있다.
2. 큰 원판이 작은 원판 위에 있어서는 안 된다.

모든 원판이 1번 기둥에 순서대로 쌓여 있을 때, 3번 기둥으로 모두 이동하는 과정을 순서대로 출력하는 프로그램을 작성하시오.


[입력형식]
1번 기둥에 쌓여 있는 원판의 개수 N(1≤N≤15)이 들어온다.


[출력형식]
한 줄에 한 개의 원판을 이동하는 과정을 “원판번호 : 이동전 기둥번호 -> 이동후 기둥번호” 형식으로 모두 출력한다.


[입력예]
3

[출력예]
1 : 1 -> 3
2 : 1 -> 2
1 : 3 -> 2
3 : 1 -> 3
1 : 2 -> 1
2 : 2 -> 3
1 : 1 -> 3

*/

public class Main {
	// n개의 원반을 from 에서 by를 거쳐 to로 옮긴다.
	public static void hanoi(int n, int from, int by, int to)
	{
		if (n == 1)
		{
			// 하나만 옮기는 거라면 (n == 1)  그냥 옮기면 된다. (종료조건)
			System.out.println(n + " : " + from + " -> " + to);
		}
		else
		{												// 최초호출되는 hanoi() 험수의 동작↓
			hanoi(n - 1, from, to, by);					// ①기둥1의  N-1개의 원반을 기둥3을 거쳐 기둥2로 옮긴다.
			System.out.println(n + " : " + from + " -> " + to); // ②기둥1에 남은 원반 한개를 기둥 3으로 옮긴다
			hanoi(n - 1, by, from, to);					// ③기둥2의 N-1개의 원반을 기둥1을 거쳐 기둥 3으로 옮긴다.
		}
	} // end hanoi()
	
	public static void main(String[] args) {
		int N;
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		hanoi(N, 1, 2, 3);			// N 개의 원반을 기둥1에서 기둥2를 거쳐 기둥3으로 옮긴다.
		sc.close();
	} // end main()

} // end class
